name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-key.outputs.key }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get npm cache key
        id: cache-key
        run: echo "key=npm-${{ runner.os }}-20-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            npm-

      - name: Install dependencies
        run: npm ci

  quality-check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get npm cache key
        id: cache-key
        run: echo "key=npm-${{ runner.os }}-20-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            npm-

      - name: Install dependencies
        run: npm ci

      - name: ESLint + Prettier check
        run: |
          npm run lint --workspaces=false
          npm run format:check --workspaces=false

  build:
    runs-on: ubuntu-latest
    needs: quality-check
    strategy:
      matrix:
        stage:
          [
            root,
            stage1-foundations,
            stage2-cli,
            stage3-backend,
            stage4-production,
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get npm cache key
        id: cache-key
        run: echo "key=npm-${{ runner.os }}-20-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            npm-

      - name: Install dependencies
        run: npm ci

      - name: Compile TypeScript
        run: |
          if [ "${{ matrix.stage }}" = "root" ]; then
            npm run build --workspaces=false
          else
            cd ${{ matrix.stage }}
            npm run build
          fi

  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        stage:
          [stage1-foundations, stage2-cli, stage3-backend, stage4-production]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get npm cache key
        id: cache-key
        run: echo "key=npm-${{ runner.os }}-20-${{ hashFiles('**/package-lock.json') }}" >> $GITHUB_OUTPUT

      - name: Restore npm cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: |
            npm-

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        working-directory: ${{ matrix.stage }}
        run: npm test
